@model ApiAuctionShop.Models.AuctionCreateViewModel
@{
    ViewData["Title"] = "Nowa aukcja";
}

<h2>@ViewData["Title"]</h2>
@using (Html.BeginForm("AddAuction", "Auction", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Aukcja</h4>
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.auction.title, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.auction.title, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.auction.title)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.auction.description, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.auction.description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.auction.description)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.auction.startPrice, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.auction.startPrice, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.auction.startPrice)
                </div>
            </div>
            @if (Model.hasBuyNowGlobal)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.auction.buyPrice, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.auction.buyPrice, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.auction.buyPrice)
                    </div>
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(model => model.auction.startDate, new { @class = "control-label col-md-2" })
                <div class="col-md-10 ">
                    <div class="input-group input-group-btn">
                        @Html.TextBoxFor(model => model.auction.startDate, new { @class = "form-control", @placeholder = "yyyy-MM-dd HH:mm:ss", @format = "yyyy -MM-dd HH:mm:ss.fff" })
                        <span class="input-group-btn">
                            @*<input class="btn btn-default" type="button" id="GetNow" value="Teraz" onclick="FillNow('startDate');" />*@
                            <input type="checkbox" name="now" value="true" onclick=""> Teraz<br>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.auction.startDate)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.auction.endDate, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.auction.endDate, new { @class = "form-control", @placeholder = "yyyy-MM-dd HH:mm:ss" })
                    @Html.ValidationMessageFor(model => model.auction.endDate)
                </div>
            </div>

        </div>

    </div>

    <div class="form-group">
        <div class="col-md-10">
           @Html.LabelFor(x => x.auction.editable)
           @Html.CheckBoxFor(x => x.auction.editable)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            <input type="file" name="file" accept="image/*" />
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-default">Send</button>
            </div>
        </div>
    </div>

}
<script type="text/javascript">

	function FillNow(element)
	{
	    var datetimeNow = new Date();
	    document.getElementById(element).value = datetimeNow.getFullYear() + "-" + ("0" + (datetimeNow.getMonth() + 1)).slice(-2) + "-" + ("0" + (datetimeNow.getDate())).slice(-2) + " " + ("0" + datetimeNow.getHours()).slice(-2) + ":" + ("0" + datetimeNow.getMinutes()).slice(-2) + ":" + ("0" + datetimeNow.getSeconds()).slice(-2);
	}

</script>

<script type="text/javascript" src="~/lib/jquery/dist/jquery.min.js"></script>
<script type="text/javascript" src="~/moment-develop/min/moment.min.js"></script>
<script src="~/bootstrap-datetimepicker-master/build/js/bootstrap-datetimepicker.min.js"></script>

<link href="~/bootstrap-datetimepicker-master/build/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script>
    $(document).ready(function(){
      $('input[name="startDate"]').datetimepicker({
          format: 'YYYY-MM-DD HH:mm:ss'
      });
      $('input[name="endDate"]').datetimepicker({
          format: 'YYYY-MM-DD HH:mm:ss'
      });
    })
</script>