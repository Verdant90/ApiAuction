@model BiddingViewModel
@using Projekt.Controllers;
@using System.Security.Claims; 
@using Microsoft.AspNet.Mvc.Localization
@inject IViewLocalizer Loc

<div class="auctionPage">
    <header class="page-header">
        <h3 class="page-title">@Html.DisplayFor(model => model.auctionToSend.title)</h3>
        <hr />
    </header>
    <div class="row">
        <div class="col-xs-12 col-sm-12">
            <div class="panel panel-default">
                <div class="panel-heading resume-heading">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-md-12">
                                    <figure>
                                        @if (Model.auctionToSend.imageFiles != null && Model.auctionToSend.imageFiles.Count > 0)
                                        {
                                            String path = Model.auctionToSend.imageFiles.ElementAt(0).ImagePath;
                                            int index = path.IndexOf(@"\images");
                                            path = path.Substring(index);
                                            <img class="img-thumbnail img-responsive" id="mainimage" src="@String.Format(path)" alt="" data-toggle="modal" data-target=".bs-example-modal-lg" onclick="setCarouselActiveItem()" />
                                        }
                                        else
                                        {
                                            <img class="img-thumbnail img-responsive" id="mainimage" src="~/images/noimage.png" alt="" data-toggle="modal" data-target=".bs-example-modal-lg" onclick="setCarouselActiveItem()" />

                                        }
                                        @if (Model.auctionToSend.imageFiles != null && Model.auctionToSend.imageFiles.Count > 1)
                                        {
                                            @foreach (var image in Model.auctionToSend.imageFiles)
                                                                            {
                                                String path = image.ImagePath;
                                                int index = path.IndexOf(@"\images");
                                                path = path.Substring(index);
                                                <div class="col-lg-3 no-padding">
                                                    <img class="img-thumbnail img-responsive" onclick="changeImage(this)" src="@String.Format(path)" alt="" />
                                                </div>
                                            }
                                        }
                                    </figure>
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-8">
                                <ul class="list-group col-lg-12">
                                    <li class="list-group-item">
                                        <b class="titleOfAuction">
                                            @Html.DisplayFor(model => model.auctionToSend.title) 
                                        </b>
                                        <br />
                                        @switch (Model.auctionToSend.state)
                                        {
                                            case "active":
                                                <small> @Loc["State"]: <span class="label label-success">@Loc["AuctionPending"]</span></small>
                                                break;
                                            case "ended":
                                                <small> @Loc["State"]: <span class="label label-default">@Loc["AuctionEnded"]</span></small>
                                                break;
                                            case "inactive":
                                                <small> @Loc["State"]: <span class="label label-danger">@Loc["AuctionInactive"]</span></small>
                                                break;
                                            case "waiting":
                                                <small> @Loc["State"]: <span class="label label-warning">@Loc["AuctionWaiting"]</span></small>
                                                break;

                                        }
                                    </li>
                                    <li class="list-group-item">@Loc["Author"]: @Model.auctionToSend.author </li>
                                    <li class="list-group-item glyphicon glyphicon-off" title="@Loc["StartDate"]">@Html.Raw(" ") @Model.auctionToSend.startDate</li>
                                    <li class="list-group-item " title="@Loc["EndDate"]">
                                        <div class="glyphicon glyphicon-stop">
                                            @Html.Raw(" ") @Model.auctionToSend.endDate 
                                        </div>
                                        <br />
                                        @if (Model.auctionToSend.state == "active" && Model.auctionToSend.editable == true)
                                        {
                                            <div class="smaller">(@Loc["AuthorWantsToBeAbleToEndTheAuctionBeforeEndDate"] )</div>
                                            

                                        }
                                    </li>
                                    <li class="list-group-item">
                                        @if (Model.bids.Count > 0)
                                        {
                                            @if (Model.auctionToSend.state == "ended")
                                            {
                                                @Loc["EndPrice"]
                                            }
                                            else
                                            {
                                                @Loc["CurrentPrice"]

                                            }
                                            @: : @Model.bids.First().bid zł
                                        }
                                        else
                                        {
                                            @:@Loc["StartingPrice"]: <b class="titleOfAuction">@Model.auctionToSend.startPrice zł </b>
                                                              
                                        }
                                    </li>
                                </ul>
                                @if (!User.IsSignedIn())
                                {
                                    <b>@Loc["LogInToBeAbleToBid"]</b>
                                   
                                }
                                else
                                {
                                    @if (User.GetUserName() == Model.auctionToSend.author)
                                    {
                                        <b>@Loc["YouAreTheAuthorOfThisAuctionAndThereforeCantBid"]</b>

                                    }
                                    else
                                    {
                                        if (!User.IsInRole("Admin"))
                                        {
                                            @if (Model.auctionToSend.state == "active")
                                            {
                                                @using (Html.BeginForm("CreateBid", "Auction", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                                {
                                                    <div class="col-md-9">
                                                        @Html.AntiForgeryToken()
                                                        @Html.HiddenFor(model => model.auctionToSend.ID)
                                                        <div class="col-md-6 col-md-offset-3">
                                                            <input type="text" class="form-control" data-val="true" data-val-number="@Loc["TheFieldBidMustBeANumber"]" data-val-required="@Loc["YouMustEnterThePrice"]" id="bid" name="bid" value="0,00">
                                                        </div>
                                                        <div class="col-md-3">
                                                            <button type="submit" class="btn btn-success">@Loc["Bid"]! </button>
                                                        </div>
                                                    </div>
                                                }
                                                if (Model.hasBuyNowGlobal && Model.auctionToSend.buyPrice != null)
                                                {
                                                    @using (Html.BeginForm("BuyNow", "Auction", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                                    {
                                                        @Html.AntiForgeryToken()
                                                        @Html.HiddenFor(model => model.auctionToSend.ID)
                                                        <div class="col-md-3 no-padding">
                                                            <button type="submit" class="btn btn-warning">@Loc["BuyNowFor"] @Model.auctionToSend.buyPrice.ToString() zł! </button>
                                                        </div>
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {

                                            <b>@Loc["AdminCantBid"]</b>

                                        }
                                    }

                                }
                               
                            </div>
                        </div>
                    </div>
                </div>

            </div>
                <br />
                <div class="col-md-12">
                    <h4>@Loc["ItemDescription"]</h4>
                    <hr />
                    <p>
                       @Model.auctionToSend.description
                    </p>
                </div>
                <br />
                <div class="col-md-12">
                    <h4>@Loc["BuyOffers"]</h4>
                    <hr />
                    @if (Model.bids.Count > 0)
                    {
                        <br />
                        <table class="table table-striped table-responsive ">
                            <thead>
                                <tr>
                                    <th>@Loc["Number"]</th>
                                    <th>@Loc["User"]</th>
                                    <th>@Loc["BidValue"]</th>
                                    <th>@Loc["Date"]</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var b in Model.bids.Select((value, i) => new { i = ++i, value }))
                                {
                                    <tr>
                                        <td>@b.i.</td>
                                        <td>@b.value.bidAuthor</td>
                                        <td>@b.value.bid.ToString() zł</td>
                                        <td>@b.value.bidDate.ToString()</td>
                                    </tr>

                                }
                            </tbody>
                        </table>

                    }
                    else
                    {
                        @if (Model.auctionToSend.state == "active")
                        {
                            <h4>@Loc["NoBidsYet"]</h4>
                        }
                        else if (Model.auctionToSend.state == "waiting")
                        {

                            <h4>@Loc["AuctionHasntStarted"]</h4>
                        }

                    }
                </div>
        </div>
    </div>

</div>

<div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="false">

                <div class="carousel-inner">
                    @if (Model.auctionToSend.imageFiles != null && Model.auctionToSend.imageFiles.Count > 0)
                    {
                        var i = 0;
                        @foreach (var image in Model.auctionToSend.imageFiles)
                        {

                            String path = image.ImagePath;
                            int index = path.IndexOf(@"\images");
                            path = path.Substring(index);

                            var itemClass = i++ == 0 ? "item active" : "item";
                            <div class="@itemClass">
                                <img class="img-responsive" src=@path alt="" style="width:1440px;height:720px" />
                            </div>
                        }
                    }

                </div>

                <!-- Controls -->
                <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
                    <span class="glyphicon glyphicon-chevron-left"></span>
                </a>
                <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
                    <span class="glyphicon glyphicon-chevron-right"></span>
                </a>
            </div>
        </div>
    </div>
</div>

<script>

    // ustawienie slajdu Carousel na obrazek, kt�ry obecnie jest obrazkiemm g��wnym
    function setCarouselActiveItem()
    {
        var currentActive = jQuery('.carousel-inner').find('.active');
        currentActive.removeClass('active');

        var path = mainimage.src
        var index = path.indexOf("\images");
        path = path.substring(index - 1);
        path = path.replace(/\//g, '\\');

        // szukanie w Carousel slajdu, kt�ry ma taki sam url co obrazek g��wny
        $('.carousel-inner .item').each(function (index)
        {
            if ($(this).find('img').attr('src') == path)
                $(this).addClass('active');
        });

    }

    function changeImage(img)
    {
        var mainimage = document.getElementById("mainimage")
        mainimage.src = img.src;
    }
</script>