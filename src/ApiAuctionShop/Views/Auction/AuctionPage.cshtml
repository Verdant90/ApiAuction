@model BiddingViewModel
@using Projekt.Controllers;


<h2>@Model.d["Auction"][ViewContext.RouteData.Values["language"].ToString().Substring(0, 2)]</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.auctionToSend.title)
        </dt>
        <dd>
            <h4>
                @Html.DisplayFor(model => model.auctionToSend.title)
            </h4>
        </dd>
        <dd>
            @if (Model.auctionToSend.ImageData != null)
            {
            <img src="@String.Format("data:image/gif;base64,{0}", Convert.ToBase64String(Model.auctionToSend.ImageData))" />
            } else
            {
                @: Brak zdjecia.

            }
        </dd>
        
        <dt>
            @Html.DisplayNameFor(model => model.auctionToSend.description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.auctionToSend.description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.auctionToSend.startDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.auctionToSend.startDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.auctionToSend.endDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.auctionToSend.endDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.auctionToSend.startPrice)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.auctionToSend.startPrice)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.auctionToSend.buyPrice)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.auctionToSend.buyPrice)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.auctionToSend.state)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.auctionToSend.state)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.auctionToSend.editable)
        </dt>
        <dd>
            @if (Model.auctionToSend.editable)
            {
               @: Yes

            }
            else
            {
               @: No
            }
        </dd>

       
    </dl>
    @if (Model.auctionToSend.state == "active")
    {
        <h2>Licytacja</h2>

        @using (Html.BeginForm("CreateBid", "Auction", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.auctionToSend.ID)
            @Html.EditorFor(model => model.bid, new { @Value = "" })
            <input type="submit" value="Licytuj!" />

        }
        <br />
        @if (Model.hasBuyNowGlobal && Model.auctionToSend.buyPrice != null)
        {
            @using (Html.BeginForm("BuyNow", "Auction", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.auctionToSend.ID)
                <input type="submit" value="Kup teraz za @Model.auctionToSend.buyPrice.ToString() zl!" />

            }
        }
    }
    <br />
    @if (Model.auctionToSend.state == "active" && Model.auctionToSend.editable == true)
    {
        @: Autor zastrzegl prawo do zakonczenia aukcji przed czasem.

    }
    <br />
    @if (Model.bids.Count > 0)
    {
        <h2>@Model.d["BuyOffers"][ViewContext.RouteData.Values["language"].ToString().Substring(0, 2)]</h2>
        <br />
        <table style="width:100%">
            <tr>
                <th>@Model.d["No"][ViewContext.RouteData.Values["language"].ToString().Substring(0, 2)]</th>
                <th>@Model.d["User"][ViewContext.RouteData.Values["language"].ToString().Substring(0, 2)]</th>
                <th>@Model.d["Price"][ViewContext.RouteData.Values["language"].ToString().Substring(0, 2)]</th>
                <th>@Model.d["BidDate"][ViewContext.RouteData.Values["language"].ToString().Substring(0, 2)]</th>
            </tr>
            @foreach (var b in Model.bids.Select((value, i) => new { i = ++i, value }))
            {
                <tr>
                    <td>@b.i.</td>
                    <td>@b.value.bidAuthor</td>
                    <td>@b.value.bid.ToString("C")</td>
                    <td>@b.value.bidDate.ToString()</td>
                </tr>

            }
        </table>
    }
    else
    {
        @if (Model.auctionToSend.state == "active")
        {
            <h4>No bids yet!</h4>
        }
        else if (Model.auctionToSend.state == "waiting")
        {

            <h4>The auction hasn't started yet. </h4>
        }

    }
</div>

