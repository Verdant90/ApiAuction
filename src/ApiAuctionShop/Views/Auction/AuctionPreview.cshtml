@model ApiAuctionShop.Models.AuctionCreateViewModel
@using Projekt.Controllers;
@using Microsoft.AspNet.Mvc.Localization
@inject IViewLocalizer Loc



<header class="page-header">
    <h3 class="page-title">@Html.DisplayFor(model => model.auction.title)</h3>
    <hr />
</header>
@using (Html.BeginForm("AddAuction", "Auction", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    //@Html.Hidden("acvm.auction.title", Model.auction.title)
    @Html.HiddenFor(model => model.auction.title)
    //@Html.Hidden("acvm.auction.startPrice", Model.auction.startPrice)
    @Html.HiddenFor(model => model.auction.startPrice)
    //@Html.Hidden("acvm.auction.buyPrice", Model.auction.buyPrice)
    @Html.HiddenFor(model => model.auction.buyPrice)
    //@Html.Hidden("acvm.auction.imageFiles", Model.auction.imageFiles)
    @Html.HiddenFor(model => model.auction.imageFiles)
    //@Html.Hidden("acvm.auction.description", Model.auction.description)
    @Html.HiddenFor(model => model.auction.description)
    //@Html.Hidden("acvm.auction.duration", Model.auction.duration)
    @Html.HiddenFor(model => model.auction.duration)
    //@Html.Hidden("acvm.hasBuyNowGlobal", Model.hasBuyNowGlobal)
    @Html.HiddenFor(model => model.hasBuyNowGlobal)
    //@Html.Hidden("acvm.timePeriods", Model.timePeriods)
    @Html.HiddenFor(model => model.timePeriods)

    <div>
        <div style="display: none;">@Html.EditorFor(model => model.auction.imageFiles)</div>

        @{ var imageIndex = 0; }
        @foreach (var imagefile in Model.auction.imageFiles)
        {
            // Tylko ImagePath, bo reszta i tak się sama generuje
            @Html.HiddenFor(model => Model.auction.imageFiles.ToList()[imageIndex].ImagePath);
            //@Html.TextBoxFor(model => Model.auction.imageFiles.ToList()[imageIndex].ImagePath);

            //@Html.TextBoxFor(model => model.auction.);
            //@Html.HiddenFor(model => model.auction.imageFiles.ElementAt(imageIndex).ImagePath);
            //@Html.Hidden("acvm.auction.imageFiles[" + imageIndex + "].ImagePath", imagefile.ImagePath);
            imageIndex++;
        }
    </div>
    <div class="row">
        <div class="col-xs-12 col-sm-12">
            <div class="panel panel-default">
                <div class="panel-heading resume-heading">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-md-12">
                                    <figure>
                                        @if (Model.auction.imageFiles != null && Model.auction.imageFiles.Count > 0)
                                        {
                                            String path = Model.auction.imageFiles.ElementAt(0).ImagePath;
                                            int index = path.IndexOf(@"\images");
                                            path = path.Substring(index);
                                            <img class="img-thumbnail img-responsive" id="mainimage" src="@String.Format(path)" alt="" data-toggle="modal" data-target=".bs-example-modal-lg" onclick="setCarouselActiveItem()" />
                                        }
                                        else
                                        {
                                            <img class="img-thumbnail img-responsive" id="mainimage" src="~/images/noimage.png" alt="" data-toggle="modal" data-target=".bs-example-modal-lg" onclick="setCarouselActiveItem()" />

                                        }
                                        @if (Model.auction.imageFiles != null && Model.auction.imageFiles.Count > 1)
                                        {
                                            @foreach (var image in Model.auction.imageFiles)
                                                                            {
                                                String path = image.ImagePath;
                                                int index = path.IndexOf(@"\images");
                                                path = path.Substring(index);
                                                <div class="col-lg-3 no-padding">
                                                    <img class="img-thumbnail img-responsive" onclick="changeImage(this)" src="@String.Format(path)" alt="" />
                                                </div>
                                            }
                                        }
                                    </figure>
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-8">
                                <ul class="list-group col-lg-12">
                                    <li class="list-group-item">
                                        <b class="titleOfAuction">
                                            @Html.DisplayFor(model => model.auction.title) 
                                        </b>
                                        <br />
                                        @switch (Model.auction.state)
                                        {
                                            case "active":
                                                <small> @Loc["State"]: <span class="label label-success">@Loc["AuctionPending"]</span></small>
                                                break;
                                            case "ended":
                                                <small> @Loc["State"]: <span class="label label-default">@Loc["AuctionEnded"]</span></small>
                                                break;
                                            case "inactive":
                                                <small> @Loc["State"]: <span class="label label-danger">@Loc["AuctionInactive"]</span></small>
                                                break;
                                            case "waiting":
                                                <small> @Loc["State"]: <span class="label label-warning">@Loc["AuctionWaiting"]</span></small>
                                                break;

                                        }
                                    </li>
                                    <li class="list-group-item">@Loc["Author"]: @Model.auction.author </li>
                                    <li class="list-group-item glyphicon glyphicon-off" title="@Loc["StartDate"]">@Html.Raw(" ") @Model.auction.startDate</li>
                                    <li class="list-group-item " title="@Loc["EndDate"]">
                                        <div class="glyphicon glyphicon-stop">
                                            @Html.Raw(" ") @Model.auction.endDate 
                                        </div>
                                        <br />
                                        @if (Model.auction.state == "active" && Model.auction.editable == true)
                                        {
                                            <div class="smaller">(@Loc["AuthorWantsToBeAbleToEndTheAuctionBeforeEndDate"] )</div>
                                            

                                        }
                                    </li>
                                    <li class="list-group-item">
      
                                            @Loc["StartingPrice"]: <b class="titleOfAuction">@Model.auction.startPrice zł </b>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
                <br />
                <div class="col-md-12">
                    <h4>@Loc["ItemDescription"]</h4>
                    <hr />
                    <p>
                       @Model.auction.description
                    </p>
                </div>
                <br />
                <div class="col-md-12">
                    <h4>@Loc["BuyOffers"]</h4>
                    <hr />
                </div>
        </div>
    </div>
    
    <div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="false">

                    <div class="carousel-inner">
                        @if (Model.auction.imageFiles != null && Model.auction.imageFiles.Count > 0)
                        {
                            var i = 0;
                            @foreach (var image in Model.auction.imageFiles)
                            {

                                // sparsowanie �cie�ki
                                String path = image.ImagePath;
                                int index = path.IndexOf(@"\images");
                                path = path.Substring(index);

                                var itemClass = i++ == 0 ? "item active" : "item";
                                <div class="@itemClass">
                                    <img class="img-responsive" src=@path alt="" style="width:1440px;height:720px" />
                                </div>
                            }
                        }

                    </div>
                    <!-- Controls -->
                    <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
                        <span class="glyphicon glyphicon-chevron-left"></span>
                    </a>
                    <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
                        <span class="glyphicon glyphicon-chevron-right"></span>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success" name="submit" value="send">@Loc["Submit"]</button>
                <button type="submit" class="btn btn-danger" name="submit" value="cancel">@Loc["Cancel"]</button>
            </div>
        </div>
    </div>
}
<script>

    // ustawienie slajdu Carousel na obrazek, kt�ry obecnie jest obrazkiemm g��wnym
    function setCarouselActiveItem()
    {
        var currentActive = jQuery('.carousel-inner').find('.active');
        currentActive.removeClass('active');

        var path = mainimage.src
        var index = path.indexOf("\images");
        path = path.substring(index - 1);
        path = path.replace(/\//g, '\\');

        // szukanie w Carousel slajdu, kt�ry ma taki sam url co obrazek g��wny
        $('.carousel-inner .item').each(function (index)
        {
            if ($(this).find('img').attr('src') == path)
                $(this).addClass('active');
        });

    }

    function changeImage(img)
    {
        var mainimage = document.getElementById("mainimage")
        mainimage.src = img.src;
    }
</script>